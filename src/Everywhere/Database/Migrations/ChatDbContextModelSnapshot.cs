// <auto-generated />
using System;
using AlfredGPT.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AlfredGPT.Database.Migrations
{
    [DbContext(typeof(ChatDbContext))]
    partial class ChatDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("AlfredGPT.Database.BlobEntity", b =>
                {
                    b.Property<string>("Sha256")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("INTEGER");

                    b.Property<long>("LastAccessAt")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LocalPath")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<long>("Size")
                        .HasColumnType("INTEGER");

                    b.HasKey("Sha256");

                    b.HasIndex("LastAccessAt");

                    b.ToTable("Blobs");
                });

            modelBuilder.Entity("AlfredGPT.Database.ChatContextEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Topic")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<long>("UpdatedAt")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UpdatedAt");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("AlfredGPT.Database.ChatNodeEntity", b =>
                {
                    b.Property<Guid>("ChatContextId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Author")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ChoiceChildId")
                        .HasColumnType("TEXT");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Payload")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<long>("UpdatedAt")
                        .HasColumnType("INTEGER");

                    b.HasKey("ChatContextId", "Id");

                    b.HasIndex("ChatContextId", "ChoiceChildId");

                    b.HasIndex("ChatContextId", "IsDeleted");

                    b.HasIndex("ChatContextId", "ParentId", "Id")
                        .IsUnique();

                    b.ToTable("Nodes");
                });

            modelBuilder.Entity("AlfredGPT.Database.NodeBlobEntity", b =>
                {
                    b.Property<Guid>("ChatContextId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ChatNodeId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Index")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BlobSha256")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("ChatContextId", "ChatNodeId", "Index");

                    b.HasIndex("BlobSha256");

                    b.ToTable("NodeBlobs");
                });

            modelBuilder.Entity("AlfredGPT.Database.NodeBlobEntity", b =>
                {
                    b.HasOne("AlfredGPT.Database.ChatNodeEntity", null)
                        .WithMany()
                        .HasForeignKey("ChatContextId", "ChatNodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
